import xbmc
import xbmcgui
import sys
import threading
from traceback import print_exc
from XSqueezeCommon import *
from b808common import *
import datetime
import constants
import cec

#hdmi support
cec.init()

tv        = cec.Device(0)
avr       = cec.Device(5)

################################################################################
################################################################################
################################################################################
# CONST DATA NEEDED JUST HERE
# MAP OF ACTION NAMES TO ID NUMBERS
# MAP OF XBMC ACTION NAMES TO SQUEEZEBOX ACTION STRINGS
# FROM https://github.com/xbmc/xbmc/blob/master/xbmc/guilib/Key.h
################################################################################
################################################################################
################################################################################

ACTION_CODES = {

                'ACTION_NONE'             :0,
                'ACTION_MOVE_LEFT'        :1,
                'ACTION_MOVE_RIGHT'       :2,
                'ACTION_MOVE_UP'          :3,
                'ACTION_MOVE_DOWN'        :4,
                'ACTION_PAGE_UP'          :5,
                'ACTION_PAGE_DOWN'        :6,
                'ACTION_SELECT_ITEM'      :7,
                'ACTION_HIGHLIGHT_ITEM'   :8,
                'ACTION_PARENT_DIR'       :9,
                'ACTION_PREVIOUS_MENU'    :10,
                'ACTION_SHOW_INFO'        :11,
                'ACTION_PAUSE'            :12,
                'ACTION_STOP'             :13,
                'ACTION_NEXT_ITEM'        :14,
                'ACTION_PREV_ITEM'        :15,
                'ACTION_FORWARD'          :16,
                'ACTION_REWIND'           :17,
                'REMOTE_0'                :58,
                'REMOTE_1'                :59,
                'REMOTE_2'                :60,
                'REMOTE_3'                :61,
                'REMOTE_4'                :62,
                'REMOTE_5'                :63,
                'REMOTE_6'                :64,
                'REMOTE_7'                :65,
                'REMOTE_8'                :66,
                'REMOTE_9'                :67,
                'ACTION_PLAYER_FORWARD'   :77,
                'ACTION_PLAYER_REWIND'    :78,
                'ACTION_PLAYER_PLAY'      :79,
                'ACTION_VOLUME_UP'        :88,
                'ACTION_VOLUME_DOWN'      :89,
                'ACTION_MUTE'             :91,
                'ACTION_NAV_BACK'         :92,
                'ACTION_CONTEXT_MENU'     :117,
                'ACTION_JUMP_SMS2'        :142,
                'ACTION_JUMP_SMS3'        :143,
                'ACTION_JUMP_SMS4'        :144,
                'ACTION_JUMP_SMS5'        :145,
                'ACTION_JUMP_SMS6'        :146,
                'ACTION_JUMP_SMS7'        :147,
                'ACTION_JUMP_SMS8'        :148,
                'ACTION_JUMP_SMS9'        :149,
                'ACTION_FIRST_PAGE'       :159,
                'ACTION_LAST_PAGE'        :160,
}

SQUEEZE_CODES = {
                'ACTION_NONE'             :'',
                'ACTION_MOVE_LEFT'        :'arrow_left',
                'ACTION_MOVE_RIGHT'       :'arrow_right',
                'ACTION_MOVE_UP'          :'arrow_up',
                'ACTION_MOVE_DOWN'        :'arrow_down',
                'ACTION_PAGE_UP'          :'volup',
                'ACTION_PAGE_DOWN'        :'voldown',
                'ACTION_SELECT_ITEM'      :'',
                'ACTION_PLAYER_PLAY'      :'play.single',
                'ACTION_HIGHLIGHT_ITEM'   :'',
                'ACTION_PARENT_DIR'       :'arrow_left',
                'ACTION_PREVIOUS_MENU'    :'arrow_left',
                'ACTION_SHOW_INFO'        :'',
                'ACTION_PAUSE'            :'pause.single',
                'ACTION_STOP'             :'stop',
                'ACTION_NEXT_ITEM'        :'fwd.single',
                'ACTION_PREV_ITEM'        :'rew.single',
                'ACTION_FORWARD'          :'fwd.hold',
                'ACTION_REWIND'           :'rew.hold',
                'REMOTE_0'                :'0',
                'REMOTE_1'                :'1',
                'REMOTE_2'                :'2',
                'REMOTE_3'                :'3',
                'REMOTE_4'                :'4',
                'REMOTE_5'                :'5',
                'REMOTE_6'                :'6',
                'REMOTE_7'                :'7',
                'REMOTE_8'                :'8',
                'REMOTE_9'                :'9',
                'ACTION_PLAYER_FORWARD'   :'fwd.hold',
                'ACTION_PLAYER_REWIND'    :'rew.hold',
                'ACTION_VOLUME_UP'        :'volup',
                'ACTION_VOLUME_DOWN'      :'voldown',
                'ACTION_MUTE'             :'muting',
                'ACTION_JUMP_SMS2'        :'2',
                'ACTION_JUMP_SMS3'        :'3',
                'ACTION_JUMP_SMS4'        :'4',
                'ACTION_JUMP_SMS5'        :'5',
                'ACTION_JUMP_SMS6'        :'6',
                'ACTION_JUMP_SMS7'        :'7',
                'ACTION_JUMP_SMS8'        :'8',
                'ACTION_JUMP_SMS9'        :'9',
                'ACTION_FIRST_PAGE'       :'fwd.single',
		'ACTION_LAST_PAGE'        :'rew.single',
                'BUTTON_SKIPBACK'         : 'rew.single',
                'BUTTON_REWIND'           : 'rew.hold',
                'BUTTON_PLAYPAUSE'        : 'play.single',
                'BUTTON_STOP'             : 'stop',
                'BUTTON_FASTFORWARD'      : 'fwd.hold',
                'BUTTON_SKIPFORWARD'      : 'fwd.single',
                'BUTTON_SHUFFLE'          : 'shuffle.single',
                'BUTTON_REPEAT'           : 'repeat',
                'BUTTON_VOLUP'            : 'volup',
                'BUTTON_VOLDN'            : 'voldown',
                'SLIDER_TRACKPROGRESS'    : 'seek'
}

#if using squeezeslave we can get away using ok as play/pause like I do with video..
if not constants.TOUCHENABLED and not constants.PLAYERTYPE=='squeezelite':
    SQUEEZE_CODES['ACTION_SELECT_ITEM'] = 'play.single'

ACTION_NAMES = swap_dictionary(ACTION_CODES)

BUTTON_CODES ={
                'BUTTON_EXIT'             : constants.BUTTONEXIT,
                'BUTTON_SKIPBACK'         : constants.BUTTONSKIPBACK,
                'BUTTON_REWIND'           : constants.BUTTONREWIND,
                'BUTTON_PLAYPAUSE'        : constants.BUTTONPLAYPAUSE,
                'BUTTON_STOP'             : constants.BUTTONSTOP,
                'BUTTON_FASTFORWARD'      : constants.BUTTONFASTFORWARD,
                'BUTTON_SKIPFORWARD'      : constants.BUTTONSKIPFORWARD,
                'BUTTON_SHUFFLE'          : constants.BUTTONSHUFFLE,
                'BUTTON_REPEAT'           : constants.BUTTONREPEAT,
                'BUTTON_CHOOSER'          : constants.BUTTONCHOOSER,
                'BUTTON_VOLUP'            : constants.BUTTONVOLUP,
                'BUTTON_VOLDN'            : constants.BUTTONVOLDN,
                'SLIDER_TRACKPROGRESS'    : constants.CURRENTPROGRESS
}

BUTTON_NAMES = swap_dictionary(BUTTON_CODES)

PLAYSTATEICONS = {
                'play'                    :"OSDPlayFO.png",
                'pause'                   :"OSDPauseFO.png",
                'stop'                    :"OSDStopFO.png"
}

SHUFFLESTATEICONS = {
                'shuffleon_fo'                    :"OSDRandomOnFO.png",
                'shuffleon_nf'                    :"OSDRandomOnNF.png",
                'shuffleoff_fo'                   :"OSDRandomOffFO.png",
                'shuffleoff_nf'                   :"OSDRandomOffNF.png"
}

REPEATSTATEICONS = {
                'repeaton_fo'                    :"OSDRepeatOnFO.png",
                'repeaton_nf'                    :"OSDRepeatOnNF.png",
                'repeatoff_fo'                   :"OSDRepeatOffFO.png",
                'repeatoff_nf'                   :"OSDRepeatOffNF.png"
}

################################################################################
################################################################################
### Class ActionHandler (i.e. a window)

class NowPlayingWindow(xbmcgui.WindowXML):

################################################################################
################################################################################
################################################################################
# INIT, THREADS, MAIN UPDATE LOOP
################################################################################
################################################################################
################################################################################

  ##############################################################################
  #constructor - create controls & add them to the window
  #create our SqueezePlayer object
  #create a threadlock to make squeeze CLI operations safe
  #initialise a few object vars

  def __init__( self, *args, **kwargs ):

    #we're not yet running (is set to true the first time we go through init)
    self.running=False

    #blanks the screen - this is crude, and probably wrong, but works
    self.background = xbmcgui.ControlImage(0,0,1280,720, 'black.png')
    self.addControl(self.background)

    #create a player instance (is really a player + server combo)
    try:
      self.player = SqueezePlayer()
    except:
      log( "### Failed to create SqueezePlayer object " )
      print_exc()
      raise

    #Initialise music details
    self.coverURLs = [""]
    self.playlistDetails = [""]
    self.playlist = [""]

    #a thread lock to use so that each SB related action is finished before the
    #next one is sent - without this you get race conditions over the telnet
    #interface!
    self.lock = threading.Lock()

    #to turn on hdmi av-receiver and to set the input of av-receiver
    #avr.power_on()
    #avr.set_av_input(3)
    
  ##############################################################################
